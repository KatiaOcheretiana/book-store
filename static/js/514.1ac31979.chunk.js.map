{"version":3,"file":"static/js/514.1ac31979.chunk.js","mappings":"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","sources":["components/BookDetails/BookDetails.styled.ts","components/BookDetails/BookDetails.tsx","redux/cart/selectors.ts","components/CartList/CartList.tsx","pages/CartPage.tsx","redux/books/selectors.ts"],"sourcesContent":["import styled from \"styled-components\";\n\ntype ItemBoxProps = {\n  isCart?: boolean;\n};\n\nexport const ItemBox = styled.div<ItemBoxProps>`\n  height: 100%;\n  padding: 20px;\n  border-radius: 24px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\n\n  display: flex;\n  flex-direction: ${(props) => (props.isCart ? \"row\" : \"column\")};\n  gap: ${(props) => (props.isCart ? \"20px\" : \"0\")};\n\n  max-width: ${(props) => (props.isCart ? \"800px\" : \"auto\")};\n\n  align-items: center;\n  justify-content: space-between;\n\n  cursor: pointer;\n\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    transform: ${(props) => (props.isCart ? \"scale(1)x\" : \"scale(1.1)\")};\n  }\n`;\n\nexport const CardTextContent = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const BookImg = styled.img`\n  height: 250px;\n  width: auto;\n  object-fit: contain;\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n  font-size: 20px;\n  line-height: 150%;\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  line-height: 150%;\n  color: #11101c;\n`;\n\nexport const CardDescription = styled.span`\n  font-weight: 500;\n  color: #8a8a89;\n`;\n","import { Book } from \"../../types\";\nimport {\n  BookImg,\n  CardDescription,\n  CardTextContent,\n  ItemBox,\n  Text,\n  Title,\n} from \"./BookDetails.styled\";\n\ntype BookDetailsPropsType = {\n  children: React.ReactNode;\n  book: Book;\n  isCart?: boolean;\n};\n\nexport const BookDetails = ({\n  book,\n  children,\n  isCart,\n}: BookDetailsPropsType) => {\n  const { author, book_image, description, price, title } = book;\n\n  return (\n    <ItemBox isCart={isCart}>\n      <BookImg src={book_image} alt={title} />\n      <CardTextContent>\n        <Title> {title}</Title>\n        <Text>\n          <CardDescription>Author:</CardDescription> {author}\n        </Text>\n        <Text>\n          <CardDescription>Description:</CardDescription> {description}\n        </Text>\n        <Text>\n          <CardDescription>Price:</CardDescription> {price} $\n        </Text>\n      </CardTextContent>\n      {children}\n    </ItemBox>\n  );\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { selectBooks } from \"../books/selectors\";\nimport { Book } from \"../../types\";\n\nexport const selectCartBooksIdAmound = (state: RootState) =>\n  state.cart.cartBooks;\n\nexport const selectCartBooks = createSelector(\n  [selectBooks, selectCartBooksIdAmound],\n  (books, cartBooks) => {\n    const result = books.map((book) => {\n      const cartBook = cartBooks.find(\n        (cartBook: { _id: string }) => cartBook._id === book._id\n      );\n      return cartBook ? { ...book, amount: cartBook.amount } : null;\n    });\n\n    return result.filter((book) => book !== null) as Book[];\n  }\n);\n","import { Button, Grid } from \"@mui/material\";\nimport { Book } from \"../../types\";\nimport { BookDetails } from \"../BookDetails/BookDetails\";\nimport { useDispatch } from \"react-redux\";\n// import {\n//   selectCartBooks,\n//   selectCartBooksIdAmound,\n// } from \"../../redux/cart/selectors\";\nimport {\n  decreaceAmount,\n  deleteFromCart,\n  increaceAmount,\n} from \"../../redux/cart/cartSlice\";\n\ntype CartListPropsType = {\n  booksData: Book[];\n};\n\nexport const CartList = ({ booksData }: CartListPropsType) => {\n  const dispatch = useDispatch();\n\n  // const info = useSelector(selectCartBooksIdAmound);\n\n  // console.log(info);\n\n  // const selectCartBookss = useSelector(selectCartBooks);\n\n  // console.log(selectCartBookss);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"flex-start\"\n      alignItems=\"flex-start\"\n      spacing={5}\n    >\n      {booksData.map((book) => (\n        <Grid item key={book._id}>\n          <BookDetails book={book} isCart>\n            <Grid\n              width=\"350px\"\n              columnGap=\"10px\"\n              container\n              direction=\"row\"\n              justifyContent=\"space-around\"\n              alignItems=\"center\"\n            >\n              <Button\n                variant=\"contained\"\n                onClick={() => {\n                  if (book.amount === 1) {\n                    dispatch(deleteFromCart(book._id));\n                  } else {\n                    dispatch(decreaceAmount(book._id));\n                  }\n                }}\n              >\n                -\n              </Button>\n              <p>{book.amount}</p>\n              <Button\n                variant=\"contained\"\n                onClick={() => dispatch(increaceAmount(book._id))}\n              >\n                +\n              </Button>\n            </Grid>\n          </BookDetails>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { selectCartBooks } from \"../redux/cart/selectors\";\nimport { Container } from \"@mui/material\";\nimport { CartList } from \"../components/CartList/CartList\";\n\nconst CartPage = () => {\n  const booksInCart = useSelector(selectCartBooks);\n\n  return (\n    <Container style={{ marginTop: \"110px\", marginBottom: \"100px\" }}>\n      <CartList booksData={booksInCart} />\n\n      <h3>Total:</h3>\n    </Container>\n  );\n};\n\nexport default CartPage;\n","import { Book } from \"../../types\";\nimport { RootState } from \"../store\";\n\ntype BooksResultType = [] | Book[];\n\nexport const selectBooks = (state: RootState): BooksResultType =>\n  state.books.books;\n"],"names":["ItemBox","styled","div","_templateObject","_taggedTemplateLiteral","props","isCart","CardTextContent","_templateObject2","BookImg","img","_templateObject3","Title","h3","_templateObject4","Text","p","_templateObject5","CardDescription","span","_templateObject6","BookDetails","_ref","book","children","author","book_image","description","price","title","_jsxs","_jsx","src","alt","selectCartBooks","createSelector","selectBooks","state","cart","cartBooks","books","map","cartBook","find","_id","amount","filter","CartList","booksData","dispatch","useDispatch","Grid","container","direction","justifyContent","alignItems","spacing","item","width","columnGap","Button","variant","onClick","deleteFromCart","decreaceAmount","increaceAmount","CartPage","booksInCart","useSelector","Container","style","marginTop","marginBottom"],"sourceRoot":""}