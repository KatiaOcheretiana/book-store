{"version":3,"file":"static/js/234.5bac8b3f.chunk.js","mappings":"sKAMO,MAAMA,EAAUC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oUAc7BC,IAAA,IAAC,OAAEC,GAAQD,EAAA,OACXC,EAAM,oQAcH,IAGMC,EAAkBN,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kHAQ5BK,EAAUR,EAAAA,GAAOS,IAAGC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,oEAMpBQ,EAAQX,EAAAA,GAAOY,GAAEC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2EAMjBW,EAAOd,EAAAA,GAAOe,EAACC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,uEAMfc,EAAkBjB,EAAAA,GAAOkB,KAAIC,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,kD,uBC3CnC,MAAMiB,EAAchB,IAIE,IAJD,KAC1BiB,EAAI,SACJC,EAAQ,OACRjB,GACqBD,EACrB,MAAM,OAAEmB,EAAM,WAAEC,EAAU,YAAEC,EAAW,MAAEC,EAAK,MAAEC,GAAUN,EACpDO,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAE7BC,GAAgBF,EAAAA,EAAAA,IAAYG,EAAAA,IAE5BC,EAAkBC,KAAKC,MAAMC,OAAOV,GAASK,GAEnD,OACEM,EAAAA,EAAAA,MAACtC,EAAO,CAACM,OAAQA,EAAOiB,SAAA,EACtBgB,EAAAA,EAAAA,KAAC9B,EAAO,CAAC+B,IAAKf,EAAYgB,IAAKb,KAC/BU,EAAAA,EAAAA,MAAC/B,EAAe,CAAAgB,SAAA,EACde,EAAAA,EAAAA,MAAC1B,EAAK,CAAAW,SAAA,CAAC,IAAEK,MACTU,EAAAA,EAAAA,MAACvB,EAAI,CAAAQ,SAAA,EACHgB,EAAAA,EAAAA,KAACrB,EAAe,CAAAK,SAAC,YAAyB,IAAEC,MAE9Cc,EAAAA,EAAAA,MAACvB,EAAI,CAAAQ,SAAA,EACHgB,EAAAA,EAAAA,KAACrB,EAAe,CAAAK,SAAC,iBAA8B,IAAEG,MAEnDY,EAAAA,EAAAA,MAACvB,EAAI,CAAAQ,SAAA,EACHgB,EAAAA,EAAAA,KAACrB,EAAe,CAAAK,SAAC,WAAwB,IAAEW,EAAiB,IAC3DL,QAGJN,IACO,C,iICnCP,MAAMmB,EAAYrC,IAAwC,IAAvC,UAAEsC,GAA+BtC,EACzD,MAAMuC,GAAWC,EAAAA,EAAAA,MAqBjB,OACEN,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CACHC,WAAS,EACTC,QAAS,CAAEC,GAAI,EAAGC,GAAI,GACtBC,QAAS,CAAEF,GAAI,EAAGG,GAAI,EAAGF,GAAI,IAAK3B,SAEjCoB,EAAUU,KAAK/B,IACdiB,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACQ,MAAI,EAACL,GAAI,EAAGG,GAAI,EAAGF,GAAI,EAAE3B,UAC7BgB,EAAAA,EAAAA,KAAClB,EAAAA,EAAW,CAACC,KAAMA,EAAKC,UACtBgB,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CACLC,QAAQ,YACRC,SAASlB,EAAAA,EAAAA,KAACmB,EAAAA,EAA2B,IACrCC,QAASA,IA/BIC,KACvB,MAAMC,EAAoBC,aAAaC,QAAQC,EAAAA,IAEzCC,EAAwBJ,EAC1BK,KAAKC,MAAMN,GACX,GAIJ,GAFqBI,EAAYG,SAASR,GAQxChB,GAASyB,EAAAA,EAAAA,IAAeT,QANP,CACjB,MAAMU,EAAqB,IAAIL,EAAaL,GAC5CE,aAAaS,QAAQP,EAAAA,GAAYE,KAAKM,UAAUF,IAEhD1B,GAAS6B,EAAAA,EAAAA,IAAUb,GACrB,CAEA,EAeyBc,CAAgBpD,EAAKsC,KAAKrC,SAC1C,eANgCD,EAAKsC,QAYvC,E,wBClDX,MAYA,EAZkBe,KAChB,MAAMhC,GAAYb,EAAAA,EAAAA,IAAY8C,EAAAA,GAExBC,GAAY/C,EAAAA,EAAAA,IAAYgD,EAAAA,GAE9B,OACEvC,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACC,MAAO,CAAEC,UAAW,QAASC,aAAc,SAAU3D,SAC7DsD,GAAYtC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAM,KAAM5C,EAAAA,EAAAA,KAACG,EAAS,CAACC,UAAWA,KACtC,C","sources":["components/BookDetails/BookDetails.styled.ts","components/BookDetails/BookDetails.tsx","components/BooksList/BooksList.tsx","pages/BooksPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\ntype ItemBoxProps = {\n  isCart?: boolean;\n};\n\nexport const ItemBox = styled.div<ItemBoxProps>`\n  height: 100%;\n  padding: 20px;\n  border-radius: 24px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  justify-content: space-between;\n  transition: all 0.2s ease-in-out;\n\n  flex-direction: column;\n\n  ${({ isCart }) =>\n    isCart\n      ? `\n     max-width:288px;\n        @media screen and (min-width: 1440px) {\n        flex-direction: row;\n        max-width: 800px;\n        }\n      `\n      : `\n       \n        cursor: pointer;\n        &:hover {\n          transform: scale(1.1);\n        }\n      `}\n`;\n\nexport const CardTextContent = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const BookImg = styled.img`\n  height: 250px;\n  width: auto;\n  object-fit: contain;\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n  font-size: 20px;\n  line-height: 150%;\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  line-height: 150%;\n  color: #11101c;\n`;\n\nexport const CardDescription = styled.span`\n  font-weight: 500;\n  color: #8a8a89;\n`;\n","import { useSelector } from \"react-redux\";\nimport { Book } from \"../../types\";\nimport {\n  BookImg,\n  CardDescription,\n  CardTextContent,\n  ItemBox,\n  Text,\n  Title,\n} from \"./BookDetails.styled\";\nimport {\n  selectCurrentCarrencyValue,\n  selectSymbolCurrency,\n} from \"../../redux/currency/selectors\";\n\ntype BookDetailsPropsType = {\n  children: React.ReactNode;\n  book: Book;\n  isCart?: boolean;\n};\n\nexport const BookDetails = ({\n  book,\n  children,\n  isCart,\n}: BookDetailsPropsType) => {\n  const { author, book_image, description, price, title } = book;\n  const currencySymbol = useSelector(selectSymbolCurrency);\n\n  const carrencyValue = useSelector(selectCurrentCarrencyValue);\n\n  const priceByCurrency = Math.round(Number(price) * carrencyValue);\n\n  return (\n    <ItemBox isCart={isCart}>\n      <BookImg src={book_image} alt={title} />\n      <CardTextContent>\n        <Title> {title}</Title>\n        <Text>\n          <CardDescription>Author:</CardDescription> {author}\n        </Text>\n        <Text>\n          <CardDescription>Description:</CardDescription> {description}\n        </Text>\n        <Text>\n          <CardDescription>Price:</CardDescription> {priceByCurrency}{\" \"}\n          {currencySymbol}\n        </Text>\n      </CardTextContent>\n      {children}\n    </ItemBox>\n  );\n};\n","import { Button, Grid } from \"@mui/material\";\nimport { Book } from \"../../types\";\nimport AddShoppingCartOutlinedIcon from \"@mui/icons-material/AddShoppingCartOutlined\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  addToCart,\n  increaceAmount,\n  storageKey,\n} from \"../../redux/cart/cartSlice\";\nimport { BookDetails } from \"../BookDetails/BookDetails\";\n\ntype BooksListPropsType = {\n  booksData: Book[];\n};\n\nexport const BooksList = ({ booksData }: BooksListPropsType) => {\n  const dispatch = useDispatch();\n\n  const handleAddToCart = (_id: string) => {\n    const booksInCartString = localStorage.getItem(storageKey);\n\n    const booksInCart: string[] = booksInCartString\n      ? JSON.parse(booksInCartString)\n      : [];\n\n    const isBookInCart = booksInCart.includes(_id);\n\n    if (!isBookInCart) {\n      const updatedBooksInCart = [...booksInCart, _id];\n      localStorage.setItem(storageKey, JSON.stringify(updatedBooksInCart));\n\n      dispatch(addToCart(_id));\n    } else {\n      dispatch(increaceAmount(_id));\n    }\n  };\n\n  return (\n    <Grid\n      container\n      spacing={{ xs: 2, md: 6 }}\n      columns={{ xs: 4, sm: 8, md: 12 }}\n    >\n      {booksData.map((book) => (\n        <Grid item xs={4} sm={4} md={3} key={book._id}>\n          <BookDetails book={book}>\n            <Button\n              variant=\"contained\"\n              endIcon={<AddShoppingCartOutlinedIcon />}\n              onClick={() => handleAddToCart(book._id)}\n            >\n              Buy/add\n            </Button>\n          </BookDetails>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { selectBooks, selectIsLoading } from \"../redux/books/selectors\";\nimport { BooksList } from \"../components/BooksList/BooksList\";\nimport { Container } from \"@mui/material\";\nimport { Loader } from \"../components/Loader\";\n\nconst BooksPage = () => {\n  const booksData = useSelector(selectBooks);\n\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <Container style={{ marginTop: \"110px\", marginBottom: \"100px\" }}>\n      {isLoading ? <Loader /> : <BooksList booksData={booksData} />}\n    </Container>\n  );\n};\n\nexport default BooksPage;\n"],"names":["ItemBox","styled","div","_templateObject","_taggedTemplateLiteral","_ref","isCart","CardTextContent","_templateObject2","BookImg","img","_templateObject3","Title","h3","_templateObject4","Text","p","_templateObject5","CardDescription","span","_templateObject6","BookDetails","book","children","author","book_image","description","price","title","currencySymbol","useSelector","selectSymbolCurrency","carrencyValue","selectCurrentCarrencyValue","priceByCurrency","Math","round","Number","_jsxs","_jsx","src","alt","BooksList","booksData","dispatch","useDispatch","Grid","container","spacing","xs","md","columns","sm","map","item","Button","variant","endIcon","AddShoppingCartOutlinedIcon","onClick","_id","booksInCartString","localStorage","getItem","storageKey","booksInCart","JSON","parse","includes","increaceAmount","updatedBooksInCart","setItem","stringify","addToCart","handleAddToCart","BooksPage","selectBooks","isLoading","selectIsLoading","Container","style","marginTop","marginBottom","Loader"],"sourceRoot":""}