{"version":3,"file":"static/js/889.9b249229.chunk.js","mappings":"gNAEO,MAAMA,EAAUC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qXAqBpBC,EAAkBJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kHAQ5BG,EAAUN,EAAAA,GAAOO,IAAGC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,oEAMpBM,EAAQT,EAAAA,GAAOU,GAAEC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2EAMjBS,EAAOZ,EAAAA,GAAOa,EAACC,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,uEAMfY,EAAkBf,EAAAA,GAAOgB,KAAIC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,kD,iCC9BnC,MAAMe,EAAYC,IAAwC,IAAvC,UAAEC,GAA+BD,EACzD,MAAME,GAAWC,EAAAA,EAAAA,MAsBjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,WAAS,EACTC,QAAS,CAAEC,GAAI,EAAGC,GAAI,GACtBC,QAAS,CAAEF,GAAI,EAAGG,GAAI,EAAGF,GAAI,IAAKG,SAEjCX,EAAUY,KACTC,IAAA,IAAC,IAAEC,EAAG,OAAEC,EAAM,MAAEC,EAAK,WAAEC,EAAU,YAAEC,EAAW,MAAEC,GAAON,EAAA,OACrDV,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACgB,MAAI,EAACb,GAAI,EAAGG,GAAI,EAAGF,GAAI,EAAEG,UAC7BU,EAAAA,EAAAA,MAAC1C,EAAO,CAAAgC,SAAA,EACNR,EAAAA,EAAAA,KAACjB,EAAO,CAACoC,IAAKL,EAAYM,IAAKP,KAC/BK,EAAAA,EAAAA,MAACrC,EAAe,CAAA2B,SAAA,EACdU,EAAAA,EAAAA,MAAChC,EAAK,CAAAsB,SAAA,CAAC,IAAEK,MACTK,EAAAA,EAAAA,MAAC7B,EAAI,CAAAmB,SAAA,EACHR,EAAAA,EAAAA,KAACR,EAAe,CAAAgB,SAAC,YAAyB,IAAEI,MAE9CM,EAAAA,EAAAA,MAAC7B,EAAI,CAAAmB,SAAA,EACHR,EAAAA,EAAAA,KAACR,EAAe,CAAAgB,SAAC,iBAA8B,IAAEO,MAEnDG,EAAAA,EAAAA,MAAC7B,EAAI,CAAAmB,SAAA,EACHR,EAAAA,EAAAA,KAACR,EAAe,CAAAgB,SAAC,WAAwB,IAAEQ,EAAM,YAGrDhB,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CACLC,QAAQ,YACRC,SAASvB,EAAAA,EAAAA,KAACwB,EAAAA,EAA2B,IACrCC,QAASA,IA9CEd,KACvB,MAAMe,EAAoBC,aAAaC,QAAQC,EAAAA,IACzCC,EAAwBJ,EAC1BK,KAAKC,MAAMN,GACX,GAIJ,GAFqBI,EAAYG,SAAStB,GAGxCuB,QAAQC,IAAI,uBACP,CACL,MAAMC,EAAqB,IAAIN,EAAanB,GAC5CgB,aAAaU,QAAQR,EAAAA,GAAYE,KAAKO,UAAUF,IAEhDF,QAAQC,IAAIxB,GAEZb,GAASyC,EAAAA,EAAAA,IAAU5B,GACrB,GA6B2B6B,CAAgB7B,GAAKH,SACrC,oBAnBgCG,EAuB9B,KAGN,E,cCvEX,MAYA,EAZkB8B,KAChB,MAAM5C,GAAY6C,EAAAA,EAAAA,IAAYC,EAAAA,GAI9B,OAFAT,QAAQC,IAAItC,IAGVG,EAAAA,EAAAA,KAAC4C,EAAAA,EAAS,CAACC,MAAO,CAAEC,UAAW,SAAUtC,UACvCR,EAAAA,EAAAA,KAACL,EAAS,CAACE,UAAWA,KACZ,C,kCCRT,MAAM8C,EAAeI,GAC1BA,EAAMC,MAAMA,K","sources":["components/BooksList/BooksList.styled.js","components/BooksList/BooksList.tsx","pages/BooksPage.tsx","redux/books/selectors.ts"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ItemBox = styled.div`\n  height: 100%;\n  padding: 20px;\n  border-radius: 24px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  cursor: pointer;\n\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const CardTextContent = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const BookImg = styled.img`\n  height: 250px;\n  width: auto;\n  object-fit: contain;\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n  font-size: 20px;\n  line-height: 150%;\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  line-height: 150%;\n  color: #11101c;\n`;\n\nexport const CardDescription = styled.span`\n  font-weight: 500;\n  color: #8a8a89;\n`;\n","import { Button, Grid } from \"@mui/material\";\nimport { Book } from \"../../types\";\nimport {\n  BookImg,\n  CardDescription,\n  CardTextContent,\n  ItemBox,\n  Text,\n  Title,\n} from \"./BooksList.styled\";\n\nimport AddShoppingCartOutlinedIcon from \"@mui/icons-material/AddShoppingCartOutlined\";\nimport { useDispatch } from \"react-redux\";\nimport { addToCart, storageKey } from \"../../redux/cart/cartSlice\";\n\ntype BooksListPropsType = {\n  booksData: Book[];\n};\n\nexport const BooksList = ({ booksData }: BooksListPropsType) => {\n  const dispatch = useDispatch();\n\n  const handleAddToCart = (_id: string) => {\n    const booksInCartString = localStorage.getItem(storageKey);\n    const booksInCart: string[] = booksInCartString\n      ? JSON.parse(booksInCartString)\n      : [];\n\n    const isBookInCart = booksInCart.includes(_id);\n\n    if (isBookInCart) {\n      console.log(\"already in cart\");\n    } else {\n      const updatedBooksInCart = [...booksInCart, _id];\n      localStorage.setItem(storageKey, JSON.stringify(updatedBooksInCart));\n\n      console.log(_id);\n\n      dispatch(addToCart(_id));\n    }\n  };\n\n  return (\n    <Grid\n      container\n      spacing={{ xs: 2, md: 6 }}\n      columns={{ xs: 4, sm: 8, md: 12 }}\n    >\n      {booksData.map(\n        ({ _id, author, title, book_image, description, price }) => (\n          <Grid item xs={4} sm={4} md={3} key={_id}>\n            <ItemBox>\n              <BookImg src={book_image} alt={title} />\n              <CardTextContent>\n                <Title> {title}</Title>\n                <Text>\n                  <CardDescription>Author:</CardDescription> {author}\n                </Text>\n                <Text>\n                  <CardDescription>Description:</CardDescription> {description}\n                </Text>\n                <Text>\n                  <CardDescription>Price:</CardDescription> {price} $\n                </Text>\n              </CardTextContent>\n              <Button\n                variant=\"contained\"\n                endIcon={<AddShoppingCartOutlinedIcon />}\n                onClick={() => handleAddToCart(_id)}\n              >\n                Add to cart\n              </Button>\n            </ItemBox>\n          </Grid>\n        )\n      )}\n    </Grid>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { selectBooks } from \"../redux/books/selectors\";\nimport { BooksList } from \"../components/BooksList/BooksList\";\nimport { Container } from \"@mui/material\";\n\nconst BooksPage = () => {\n  const booksData = useSelector(selectBooks);\n\n  console.log(booksData);\n\n  return (\n    <Container style={{ marginTop: \"110px\" }}>\n      <BooksList booksData={booksData} />\n    </Container>\n  );\n};\n\nexport default BooksPage;\n","import { Book } from \"../../types\";\nimport { RootState } from \"../store\";\n\ntype BooksResultType = [] | Book[];\n\nexport const selectBooks = (state: RootState): BooksResultType =>\n  state.books.books;\n"],"names":["ItemBox","styled","div","_templateObject","_taggedTemplateLiteral","CardTextContent","_templateObject2","BookImg","img","_templateObject3","Title","h3","_templateObject4","Text","p","_templateObject5","CardDescription","span","_templateObject6","BooksList","_ref","booksData","dispatch","useDispatch","_jsx","Grid","container","spacing","xs","md","columns","sm","children","map","_ref2","_id","author","title","book_image","description","price","item","_jsxs","src","alt","Button","variant","endIcon","AddShoppingCartOutlinedIcon","onClick","booksInCartString","localStorage","getItem","storageKey","booksInCart","JSON","parse","includes","console","log","updatedBooksInCart","setItem","stringify","addToCart","handleAddToCart","BooksPage","useSelector","selectBooks","Container","style","marginTop","state","books"],"sourceRoot":""}